apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRole
metadata:
  name: ${{values.component_id}}-controlplane
spec:
  forProvider:
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [
                        "eks.amazonaws.com"
                    ]
                },
                "Action": [
                    "sts:AssumeRole"
                ]
            }
        ]
      }
  providerConfigRef:
    name: aws-stack-template-provider
---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: ${{values.component_id}}-controlplane
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
    roleNameRef:
      name: ${{values.component_id}}-controlplane
  providerConfigRef:
    name: aws-stack-template-provider
---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRole
metadata:
  name: ${{values.clusterRef}}-ng-noderole
  labels:
    name: ${{values.clusterRef}}-ng-noderole
spec:
  forProvider:
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [
                        "ec2.amazonaws.com"
                    ]
                },
                "Action": [
                    "sts:AssumeRole"
                ]
            }
        ]
      }
  providerConfigRef:
    name: aws-stack-template-provider
---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: ${{values.clusterRef}}-ng-noderole-policy0
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
    roleNameSelector:
      matchLabels:
        name: ${{values.clusterRef}}-ng-noderole
  providerConfigRef:
    name: aws-stack-template-provider
---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: ${{values.clusterRef}}-ng-noderole-policy1
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    roleNameSelector:
      matchLabels:
        name: ${{values.clusterRef}}-ng-noderole
  providerConfigRef:
    name: aws-stack-template-provider
---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: ${{values.clusterRef}}-ng-noderole-policy2
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    roleNameSelector:
      matchLabels:
        name: ${{values.clusterRef}}-ng-noderole
  providerConfigRef:
    name: aws-stack-template-provider
